var t, e, n, s; function i(t, e, n) { if (!e.has(t)) throw new TypeError("attempted to " + n + " private field on non-instance"); return e.get(t) } function o(t, e) { return e.get ? e.get.call(t) : e.value } function l(t, e) { return o(t, i(t, e, "get")) } function a(t, e) { if (e.has(t)) throw new TypeError("Cannot initialize the same private elements twice on an object") } function h(t, e, n) { a(t, e), e.set(t, n) } function r(t, e, n) { if (e.set) e.set.call(t, n); else { if (!e.writable) throw new TypeError("attempted to set read only private field"); e.value = n } } function c(t, e, n) { return r(t, i(t, e, "set"), n), n } function g(t, e, n) { if (!e.has(t)) throw new TypeError("attempted to get private field on non-instance"); return n } function d(t, e) { a(t, e), e.add(t) } t = {}, e = "ThemeToggle", n = function () { return M }, Object.defineProperty(t, e, { get: n, set: s, enumerable: !0, configurable: !0 }); const m = document.createElement("template"); m.innerHTML = '\n  <style>\n    :host {\n      --icon-size: 24px;\n      --icon-color: currentColor;\n\n      box-sizing: border-box;\n    }\n\n    :host *,\n    :host *:after,\n    :host *:before {\n      box-sizing: inherit;\n    }\n\n    .hidden {\n      display: none !important;\n    }\n\n    button {\n      display: inline-flex;\n      justify-content: center;\n      align-items: center;\n      gap: 0.25rem;\n      padding: 0.5rem;\n      border: none;\n      border-radius: 0.25rem;\n      background-color: transparent;\n      color: inherit;\n      cursor: pointer;\n      font-family: inherit;\n      font-size: inherit;\n    }\n\n    .system {\n      transform: scale(0.4) translateY(-4px);\n      transform-origin: center;\n    }\n  </style>\n\n  <button type="button" part="button" id="theme-toggle" aria-live="polite">\n    <slot name="light">\n      <svg part="icon-light" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24" fill="var(--icon-color)" style="width: var(--icon-size); height: var(--icon-size);">\n        <path d="M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zM2 13h2c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1s.45 1 1 1zm18 0h2c.55 0 1-.45 1-1s-.45-1-1-1h-2c-.55 0-1 .45-1 1s.45 1 1 1zM11 2v2c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1zm0 18v2c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1s-1 .45-1 1zM5.99 4.58c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0s.39-1.03 0-1.41L5.99 4.58zm12.37 12.37c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0 .39-.39.39-1.03 0-1.41l-1.06-1.06zm1.06-10.96c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0l1.06-1.06zM7.05 18.36c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0l1.06-1.06z"></path>\n      </svg>\n    </slot>\n\n    <slot name="dark">\n      <svg part="icon-dark" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24" fill="var(--icon-color)" style="width: var(--icon-size); height: var(--icon-size);">\n        <path d="M9.5 2c-1.82 0-3.53.5-5 1.35 2.99 1.73 5 4.95 5 8.65s-2.01 6.92-5 8.65c1.47.85 3.18 1.35 5 1.35 5.52 0 10-4.48 10-10S15.02 2 9.5 2z"></path>\n      </svg>\n    </slot>\n\n    <slot name="system">\n      <svg part="icon-system" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24" fill="var(--icon-color)" style="width: var(--icon-size); height: var(--icon-size);">\n        <path d="M20 3H4c-1.1 0-2 .9-2 2v11c0 1.1.9 2 2 2h3l-1 1v2h12v-2l-1-1h3c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 13H4V5h16v11z"></path>\n        <path class="system system--light" d="M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zM2 13h2c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1s.45 1 1 1zm18 0h2c.55 0 1-.45 1-1s-.45-1-1-1h-2c-.55 0-1 .45-1 1s.45 1 1 1zM11 2v2c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1zm0 18v2c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1s-1 .45-1 1zM5.99 4.58c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0s.39-1.03 0-1.41L5.99 4.58zm12.37 12.37c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0 .39-.39.39-1.03 0-1.41l-1.06-1.06zm1.06-10.96c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0l1.06-1.06zM7.05 18.36c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0l1.06-1.06z"></path>\n        <path class="system system--dark" d="M9.5 2c-1.82 0-3.53.5-5 1.35 2.99 1.73 5 4.95 5 8.65s-2.01 6.92-5 8.65c1.47.85 3.18 1.35 5 1.35 5.52 0 10-4.48 10-10S15.02 2 9.5 2z"></path>\n      </svg>\n    </slot>\n  </button>\n'; var u = new WeakMap, w = new WeakMap, p = new WeakMap, v = new WeakSet, f = new WeakSet, y = new WeakSet, b = new WeakSet, z = new WeakMap, k = new WeakMap, E = new WeakSet; class M extends HTMLElement { static get observedAttributes() { return ["toggle-title"] } attributeChangedCallback(t, e, n) { "toggle-title" === t && e !== n && this.shadowRoot.getElementById("theme-toggle").setAttribute("title", this.toggleTitle) } get toggleTitle() { return this.getAttribute("toggle-title") } set toggleTitle(t) { this.setAttribute("toggle-title", t) } get storageKey() { return this.getAttribute("storage-key") } set storageKey(t) { this.setAttribute("storage-key", t) } connectedCallback() { g(this, E, A).call(this, "toggleTitle"), g(this, E, A).call(this, "storageKey"), c(this, w, g(this, v, x).call(this)), c(this, p, l(this, u).indexOf(l(this, w)) || 0), g(this, y, S).call(this), this.shadowRoot.getElementById("theme-toggle").addEventListener("click", l(this, z)), window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", l(this, k)) } disconnectedCallback() { this.shadowRoot.getElementById("theme-toggle").removeEventListener("click", l(this, z)), window.matchMedia("(prefers-color-scheme: dark)").removeEventListener("change", l(this, k)) } static defineCustomElement(t = "theme-toggle") { "undefined" == typeof window || window.customElements.get(t) || window.customElements.define(t, M) } constructor() { super(), d(this, v), d(this, f), d(this, y), d(this, b), d(this, E), h(this, u, { writable: !0, value: ["light", "dark", "system"] }), h(this, w, { writable: !0, value: void 0 }), h(this, p, { writable: !0, value: void 0 }), h(this, z, { writable: !0, value: () => { c(this, w, g(this, b, L).call(this)), g(this, f, T).call(this), g(this, y, S).call(this), this.dispatchEvent(new CustomEvent("theme-toggle:change", { bubbles: !0, composed: !0, detail: { theme: l(this, w) } })) } }), h(this, k, { writable: !0, value: () => { g(this, y, S).call(this) } }), this.shadowRoot || (this.attachShadow({ mode: "open" }), this.shadowRoot.appendChild(m.content.cloneNode(!0))) } } function x() { let t; try { t = window.localStorage.getItem(this.storageKey || "theme-toggle/theme-preference") } catch { } return l(this, u).includes(t) ? t : "system" } function T() { try { window.localStorage.setItem(this.storageKey || "theme-toggle/theme-preference", l(this, w)) } catch { } } function S() { const t = this.shadowRoot.getElementById("theme-toggle"); if (t.setAttribute("aria-label", l(this, w)), t.querySelectorAll("slot").forEach((t => t.classList.toggle("hidden", !t.name.includes(l(this, w))))), document.documentElement.setAttribute("data-theme", l(this, w)), this.toggleTitle || t.setAttribute("title", `Set theme to ${l(this, u)[(l(this, p) + 1) % l(this, u).length]}`), "system" === l(this, w)) { const e = window.matchMedia("(prefers-color-scheme: dark)").matches; t.querySelectorAll(".system").forEach((t => { t.classList.toggle("hidden", e ? t.classList.contains("system--light") : t.classList.contains("system--dark")) })) } } function L() { return c(this, p, (l(this, p) + 1) % l(this, u).length), l(this, u)[l(this, p)] } function A(t) { if (Object.prototype.hasOwnProperty.call(this, t)) { const e = this[t]; delete this[t], this[t] = e } } M.defineCustomElement(); export { M as ThemeToggle };
